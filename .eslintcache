[{"C:\\Users\\anisa\\Project_React\\test_technique\\src\\index.js":"1","C:\\Users\\anisa\\Project_React\\test_technique\\src\\App.js":"2","C:\\Users\\anisa\\Project_React\\test_technique\\src\\reportWebVitals.js":"3","C:\\Users\\anisa\\Project_React\\test_technique\\src\\serviceWorker.js":"4","C:\\Users\\anisa\\Project_React\\test_technique\\src\\config\\fbConfig.js":"5","C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\chartService.js":"6","C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\commissionService.js":"7","C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\productService.js":"8","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\BrandDetails.js":"9","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\BrandPicture.js":"10","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Deposits.js":"11","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Chart.js":"12","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Orders.js":"13","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Mois.js":"14","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Title.js":"15","C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\brandService.js":"16"},{"size":450,"mtime":1609107031553,"results":"17","hashOfConfig":"18"},{"size":521,"mtime":1609106823477,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608650235427,"results":"20","hashOfConfig":"18"},{"size":5086,"mtime":499162500000,"results":"21","hashOfConfig":"18"},{"size":542,"mtime":1608830630426,"results":"22","hashOfConfig":"18"},{"size":1930,"mtime":1609111796810,"results":"23","hashOfConfig":"18"},{"size":3302,"mtime":1609108578032,"results":"24","hashOfConfig":"18"},{"size":2952,"mtime":1609108792558,"results":"25","hashOfConfig":"18"},{"size":5572,"mtime":1609113952922,"results":"26","hashOfConfig":"18"},{"size":727,"mtime":1609112596717,"results":"27","hashOfConfig":"18"},{"size":783,"mtime":1609113856444,"results":"28","hashOfConfig":"18"},{"size":1628,"mtime":1609109185085,"results":"29","hashOfConfig":"18"},{"size":2552,"mtime":1609111625365,"results":"30","hashOfConfig":"18"},{"size":1705,"mtime":1609114105870,"results":"31","hashOfConfig":"18"},{"size":541,"mtime":1609113641264,"results":"32","hashOfConfig":"18"},{"size":4301,"mtime":1609108263048,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"hxd3ke",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"C:\\Users\\anisa\\Project_React\\test_technique\\src\\index.js",[],["71","72"],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\App.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\reportWebVitals.js",[],["73","74"],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\serviceWorker.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\config\\fbConfig.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\chartService.js",["75","76","77"],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\commissionService.js",["78","79"],"import firebase from \"../config/fbConfig\";\r\n\r\nexport const commissionService = {\r\n  /**\r\n   * convert time from timestamps to month\r\n   * @param {*} purchaseMonth\r\n   */\r\n  timeConverter: (purchaseMonth) => {\r\n    var a = new Date(purchaseMonth * 1000);\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var month = months[a.getMonth()];\r\n    var time = month;\r\n    return time;\r\n  },\r\n  /**\r\n   * get All keys for influencers per month\r\n   * @param {*} id\r\n   * @param {*} month\r\n   */\r\n  getInfluencerKeyFromBrands: (id, month) => {\r\n    const influencerKeyRef = firebase.database().ref(\"conversions/purchase\");\r\n    let keyInfluencers = [];\r\n    influencerKeyRef.once(\"value\", (snapshot) => {\r\n      snapshot.forEach((childSnapshot) => {\r\n        var childData = childSnapshot.val();\r\n        const salesMonth = commissionService.timeConverter(childData.createdAt);\r\n        if (childData.offerId == id && salesMonth === month) {\r\n          keyInfluencers.push(childData.influencer);\r\n        }\r\n      });\r\n    });\r\n    return keyInfluencers;\r\n  },\r\n  /**\r\n   * get Commission amount for every influencer per month\r\n   * @param {*} id\r\n   * @param {*} month\r\n   */\r\n  getCommisionInfluencer: (id, month) => {\r\n    return new Promise((resolve, reject) => {\r\n      let influencerKey = commissionService.getInfluencerKeyFromBrands(\r\n        id,\r\n        month\r\n      );\r\n      let keyInfluencer = [];\r\n      let commission = 0;\r\n      let commissionNumber = [];\r\n\r\n      const influencerRef = firebase.database().ref(\"Influencers\");\r\n      influencerRef.once(\"value\", (snapshot) => {\r\n        snapshot.forEach((childSnapshot) => {\r\n          var childKey = childSnapshot.key;\r\n\r\n          influencerKey.forEach((key) => {\r\n            if (key === childKey) {\r\n              keyInfluencer.push(childKey);\r\n            }\r\n          });\r\n        });\r\n\r\n        const uniqueKeyInfluencer = keyInfluencer.filter(onlyUnique);\r\n\r\n        // function pour éliminé les redondances dans un tableau\r\n        function onlyUnique(value, index, self) {\r\n          return self.indexOf(value) === index;\r\n        }\r\n\r\n        //Récupérer la commission de chaque influenceur\r\n        const commissionRef = firebase.database().ref(\"conversions/purchase\");\r\n        uniqueKeyInfluencer.forEach(async (key) => {\r\n          commissionRef.once(\"value\", (snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              var childData = childSnapshot.val();\r\n              const commissionMonth = commissionService.timeConverter(\r\n                childData.createdAt\r\n              );\r\n              if (\r\n                key === childData.influencer &&\r\n                childData.offerId == id &&\r\n                month === commissionMonth\r\n              ) {\r\n                commission = commission + parseFloat(childData.commission);\r\n              }\r\n            });\r\n            commissionNumber.unshift(commission);\r\n            commission = 0;\r\n          });\r\n        });\r\n\r\n        //récupérer le nombre d'article par influencer\r\n        setTimeout(() => {\r\n          resolve(commissionNumber);\r\n        }, 4000);\r\n      });\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\productService.js",["80","81"],"import firebase from \"../config/fbConfig\";\r\n\r\nexport const productService = {\r\n  /**\r\n   * convert time from timestamps to month\r\n   * @param {*} purchaseMonth\r\n   */\r\n  timeConverter: (purchaseMonth) => {\r\n    var a = new Date(purchaseMonth * 1000);\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var month = months[a.getMonth()];\r\n    var time = month;\r\n    return time;\r\n  },\r\n  /**\r\n   * get All keys for influencers per month\r\n   * @param {*} id\r\n   * @param {*} month\r\n   */\r\n  getInfluencerKeyFromBrands: (id, month) => {\r\n    const influencerKeyRef = firebase.database().ref(\"conversions/purchase\");\r\n    let keyInfluencers = [];\r\n    influencerKeyRef.once(\"value\", (snapshot) => {\r\n      snapshot.forEach((childSnapshot) => {\r\n        var childData = childSnapshot.val();\r\n        const salesMonth = productService.timeConverter(childData.createdAt);\r\n        if (childData.offerId == id && salesMonth === month) {\r\n          keyInfluencers.push(childData.influencer);\r\n        }\r\n      });\r\n    });\r\n    return keyInfluencers;\r\n  },\r\n  /**\r\n   * get number of product added per influencer\r\n   * @param {*} id\r\n   * @param {*} month\r\n   */\r\n  getProductInfluencer: (id, month) => {\r\n    return new Promise((resolve, reject) => {\r\n      let influencerKey = productService.getInfluencerKeyFromBrands(id, month);\r\n      let keyInfluencer = [];\r\n      let product = 0;\r\n      let productNumber = [];\r\n\r\n      const influencerRef = firebase.database().ref(\"Influencers\");\r\n      influencerRef.once(\"value\", (snapshot) => {\r\n        snapshot.forEach((childSnapshot) => {\r\n          var childKey = childSnapshot.key;\r\n\r\n          influencerKey.forEach((key) => {\r\n            if (key === childKey) {\r\n              keyInfluencer.push(childKey);\r\n            }\r\n          });\r\n        });\r\n\r\n        const uniqueKeyInfluencer = keyInfluencer.filter(onlyUnique);\r\n\r\n        // function pour éliminé les redondances dans un tableau\r\n        function onlyUnique(value, index, self) {\r\n          return self.indexOf(value) === index;\r\n        }\r\n\r\n        //Récupérer la commission de chaque influenceur\r\n\r\n        const articleRef = firebase.database().ref(\"articles\");\r\n        uniqueKeyInfluencer.forEach(async (key) => {\r\n          articleRef.once(\"value\", (snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n              var childData = childSnapshot.val();\r\n              if (key === childData.uid && childData.offerId == id) {\r\n                product = product + 1;\r\n              }\r\n            });\r\n            productNumber.unshift(product);\r\n            product = 0;\r\n          });\r\n        });\r\n\r\n        //récupérer le nombre d'article par influencer\r\n        setTimeout(() => {\r\n          resolve(productNumber);\r\n        }, 4000);\r\n      });\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\BrandDetails.js",["82"],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\BrandPicture.js",["83"],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Deposits.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Chart.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Orders.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Mois.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\components\\pages\\Title.js",[],"C:\\Users\\anisa\\Project_React\\test_technique\\src\\services\\brandService.js",["84","85","86"],"import firebase from \"../config/fbConfig\";\r\n\r\nexport const brandService = {\r\n  /**\r\n   * get Brand picture and name\r\n   * @param {*} id\r\n   */\r\n  getBrandPhoto: (id) => {\r\n    return new Promise((resolve, reject) => {\r\n      const imageRef = firebase.database().ref(\"brands\");\r\n      let picture = \"\";\r\n      let name = \"\";\r\n      imageRef.once(\"value\", (snapshot) => {\r\n        snapshot.forEach((childSnapshot) => {\r\n          var childData = childSnapshot.val();\r\n          if (childData.offerId == id) {\r\n            picture = childData.pic;\r\n            name = childData.name;\r\n\r\n            resolve([picture, name]);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  },\r\n  /**\r\n   * convert time from timestamps to month\r\n   * @param {*} purchaseMonth\r\n   */\r\n  timeConverter: (purchaseMonth) => {\r\n    var a = new Date(purchaseMonth * 1000);\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var month = months[a.getMonth()];\r\n    var time = month;\r\n    return time;\r\n  },\r\n  /**\r\n   * get sales number and sales amount for brand per month\r\n   * @param {*} id\r\n   * @param {*} month\r\n   */\r\n  getSalesNumber: (id, month) => {\r\n    return new Promise((resolve, reject) => {\r\n      const salesRef = firebase.database().ref(\"conversions/purchase\");\r\n      let sales = 0;\r\n      let amount = 0;\r\n\r\n      salesRef.once(\"value\", (snapshot) => {\r\n        snapshot.forEach((childSnapshot) => {\r\n          var childData = childSnapshot.val();\r\n          const salesMonth = brandService.timeConverter(childData.createdAt);\r\n          if (childData.offerId == id && salesMonth === month) {\r\n            sales = sales + 1;\r\n            amount = amount + childData.amount;\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          resolve([sales, amount]);\r\n        }, 4000);\r\n      });\r\n    });\r\n  },\r\n  /**\r\n   * get All keys for influencers per month\r\n   * @param {*} id\r\n   * @param {*} month\r\n   */\r\n  getInfluencerKeyFromBrands: (id, month) => {\r\n    const influencerKeyRef = firebase.database().ref(\"conversions/purchase\");\r\n    let keyInfluencers = [];\r\n    influencerKeyRef.once(\"value\", (snapshot) => {\r\n      snapshot.forEach((childSnapshot) => {\r\n        var childData = childSnapshot.val();\r\n        const salesMonth = brandService.timeConverter(childData.createdAt);\r\n        if (childData.offerId == id && salesMonth === month) {\r\n          keyInfluencers.push(childData.influencer);\r\n        }\r\n      });\r\n    });\r\n    return keyInfluencers;\r\n  },\r\n  /**\r\n   * get influencers details (picture, name, email) and sales number for influencer per month\r\n   * @param {*} id\r\n   * @param {*} month\r\n   */\r\n  getInfluencer: async (id, month) => {\r\n    return new Promise((resolve, reject) => {\r\n      let number = 0;\r\n      let influencerKey = brandService.getInfluencerKeyFromBrands(id, month);\r\n      let influencers = [];\r\n      let keyInfluencer = [];\r\n      let salesNumber = [];\r\n\r\n      const influencerRef = firebase.database().ref(\"Influencers\");\r\n      influencerRef.once(\"value\", (snapshot) => {\r\n        snapshot.forEach((childSnapshot) => {\r\n          var childKey = childSnapshot.key;\r\n          var childData = childSnapshot.val();\r\n          influencerKey.forEach((key) => {\r\n            if (key === childKey) {\r\n              influencers.push(childData.Profil);\r\n              keyInfluencer.push(childKey);\r\n            }\r\n          });\r\n        });\r\n\r\n        const uniqueInfluencer = influencers.filter(onlyUnique);\r\n        const uniqueKeyInfluencer = keyInfluencer.filter(onlyUnique);\r\n\r\n        // function pour éliminé les redondances dans un tableau\r\n        function onlyUnique(value, index, self) {\r\n          return self.indexOf(value) === index;\r\n        }\r\n\r\n        //sales number de chaque influenceur\r\n        uniqueKeyInfluencer.forEach(async (key) => {\r\n          keyInfluencer.forEach((key2) => {\r\n            if (key2 === key) {\r\n              number = number + 1;\r\n            }\r\n          });\r\n          salesNumber.push(number);\r\n\r\n          number = 0;\r\n        });\r\n\r\n        setTimeout(() => {\r\n          resolve([uniqueInfluencer, salesNumber]);\r\n        }, 4000);\r\n      });\r\n    });\r\n  },\r\n};\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":44,"column":31,"nodeType":"95","messageId":"96","endLine":44,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":51,"column":31,"nodeType":"95","messageId":"96","endLine":51,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":58,"column":31,"nodeType":"95","messageId":"96","endLine":58,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":40,"column":31,"nodeType":"95","messageId":"96","endLine":40,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":92,"column":35,"nodeType":"95","messageId":"96","endLine":92,"endColumn":37},{"ruleId":"93","severity":1,"message":"94","line":40,"column":31,"nodeType":"95","messageId":"96","endLine":40,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":85,"column":62,"nodeType":"95","messageId":"96","endLine":85,"endColumn":64},{"ruleId":"97","severity":1,"message":"98","line":89,"column":9,"nodeType":"99","endLine":89,"endColumn":58},{"ruleId":"100","severity":1,"message":"101","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":16,"column":33,"nodeType":"95","messageId":"96","endLine":16,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":65,"column":33,"nodeType":"95","messageId":"96","endLine":65,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":88,"column":31,"nodeType":"95","messageId":"96","endLine":88,"endColumn":33},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Title' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]